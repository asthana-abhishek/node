const express = require('express');
const bodyParser = require('body-parser');
const multer = require('multer');
const path = require('path');
const mongoose = require('mongoose');
const EventEmitter = require('events');
const route = express.Router();
mongoose.connect('mongodb://localhost:27017/e-comm');
const app = express();
const event = new EventEmitter();
app.use(express.json());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));

//middleware
const reqFilter = (req, resp, next) => {
    console.log('reqFilter');
    if (req.query.age >= 18) {
        resp.send('welcome to project');
    } else if (req.query.age < 18) {
        resp.send('You are under age');
    } else if (!req.query.age) {
        resp.send('Please provide age');

    } else {
        next();
    }

}
route.use(reqFilter);

//events
event.on('called', () => {
    console.log('event called');
});
//mongoose
const productScheema = new mongoose.Schema({
    name: String,
    price: Number,
    brand: String
});
const productModel = new mongoose.model('products', productScheema);
app.get('/', (req, resp) => {
    resp.send('home calling');
});
app.get('/getdata/:key', async (req, resp) => {
    let data = await productModel.find({
        "$or": [{
            'name': { $regex: req.params.key }
        }]
    });
    resp.send(data);
});
app.get('/deldata/:key', async (req, resp) => {
    let data = await productModel.deleteOne({ name: req.params.key });
    resp.send(data);
});
app.post('/add', async (req, resp) => {
    let data = new productModel(req.body);
    let result = await data.save();
    resp.send('data added');
});

app.post('/update', async (req, resp) => {
    let result = await productModel.update({
        name: 'apple1'
    }, {
        price: 100
    });
    event.emit('called');
    resp.send(result);
});

route.get('/about', (req, resp) => {
    resp.send('Welcome about');
});
//multer(File upload)
const upload = multer({
    storage: multer.diskStorage({
        destination: function (req, file, cb) {
            cb(null, 'uploads')
        },
        filename: function (req, file, cb) {
            cb(null, file.fieldname + Date.now() + path.extname(file.originalname));
        }
    })
}).array('user_file');

app.get('/upload', (req, resp) => {
    resp.sendFile(path.join(__dirname, 'express/html', 'fileupload.html'))
});

app.post('/upload', upload, (req, resp) => {
    resp.send('upload done');
});
app.post('/register', (req, resp) => {
    resp.send('register done');
});
app.use('/', route)
app.listen(5000);